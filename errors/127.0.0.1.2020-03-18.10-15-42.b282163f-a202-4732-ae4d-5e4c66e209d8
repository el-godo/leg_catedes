(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'legajo.foto.8cab8309bcb0b6ca.6361646574652e6a7067.jpg'"
p3
sS'layer'
p4
S'D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/nuevo.py'
p5
sS'code'
p6
S'def check():\n\t#poner un valor por defecto a un campo del formulario    \n\tform=SQLFORM.factory(    \n    Field(\'valor\',label="Ingrese Un Dni/",requires=IS_NOT_EMPTY(error_message=\'El campo puede estar vac\xc3\xado\'))\n    \n    )         \n    \tif form.accepts(request,session):\n    \t\tresponse.flash = \'formulario aceptado\'\n    \t\tredirect(URL(c=\'nuevo\',f=\'comprobacion\',args=[form.vars.valor]))\n    \telif form.errors:\n        \tresponse.flash = \'el formulario tiene errores\'\n    \telse:\n        \tresponse.flash = \'por favor complete el formulario\'  \n\treturn dict(form=form)\n\ndef comprobacion():\n\tdni=request.args[0]\n\tset_cad=db(db.legajo.dni==dni).select()\n\ttiene=len(set_cad)\n\n    \tif tiene==0:\n    \t\tredirect(URL(c=\'nuevo\',f=\'form\',args=[dni]))#si no esta en la tabla padron redirecciona\n    \telse:#si esta en la tabla padron mustro los datos\n        \tfor x in set_cad:\n        \t\tfoto=x.foto\n        \t\tformacion=x.formacion\n        \t\tcurso=x.curso\n        \t\tcuil=x.cuil\n            \tapellido=x.apellido\n            \tnombre=x.nombre\n            \tcasa=x.domicilio\n            \tnacido=x.f_nacimiento\n            \tsangre=x.g_sanguineo\n            \tcurso=x.curso\n            \tingreso=x.f_ingreso\n            \tcelu=x.celu\n            \ttel=x.fijo\n            \ttutor=x.tutor\n            \tt_tutor=x.tel_tutor\n\n\treturn dict(formacion=formacion,curso=curso,cuil=cuil,apellido=apellido,nombre=nombre,casa=casa,nacido=nacido,sangre=sangre,\n\t\tingreso=ingreso,celu=celu,tel=tel,tutor=tutor,t_tutor=t_tutor,dni=dni,foto=foto)\n\ndef form():\n\tfrom datetime import datetime, date, time, timedelta\n\timport datetime\n\timport time\n\timport calendar\n\tform=SQLFORM.factory(\n\tField(\'foto\',\'upload\'),\n    Field(\'dni\', \'integer\',\n\t\t\trequires=[IS_MATCH(\'^[0-9\\s]+$\',error_message="Ingrese el DNI"),\n\t\t\tIS_LENGTH(8),\n\t\t\tIS_NOT_EMPTY()]),\t\t\n    Field(\'cuil\',requires=[IS_UPPER(),IS_NOT_EMPTY(error_message=\'El campo no  puede estar vacio\')]),\t\t\t\n    Field(\'apellido\',requires=[IS_UPPER(),IS_NOT_EMPTY(error_message=\'El campo no  puede estar vacio\')]),\n    Field(\'nombre\',requires=[IS_UPPER(),IS_NOT_EMPTY(error_message=\'El campo no  puede estar vacio\')]),\n    Field(\'domicilio\',requires=IS_UPPER()),\n    Field(\'f_nacimiento\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio ej: 20/02/2000\'), IS_DATE(format=\'%d/%m/%Y\'),]),\n    Field(\'g_sanguineo\',requires=IS_IN_SET(["RH+","RH-"],error_message=\'Error elija el grupo sanguineo\'),),\n    Field(\'curso\',requires=IS_IN_SET(["1","2","3"],error_message=\'Error elija el curso\'),),\n    Field(\'f_ingreso\', requires=[IS_NOT_EMPTY(), IS_DATE(format=\'%d/%m/%Y\')]),\n    Field(\'celu\',\'integer\'),\n    Field(\'fijo\',\'integer\'),\n    Field(\'tutor\',requires=IS_UPPER()),\n    Field(\'tel_tutor\',\'integer\'),\n    Field(\'formacion\',label=\'Formacion\',requires=IS_IN_SET(["Esc. Cadetes","S.Penitenciario"],error_message=\'Error elija a que formacion pertenece\'))\n    \t) \n\tif form.accepts(request,session):\n\t\tdb.legajo.insert(foto=form.vars.foto,dni=form.vars.dni,cuil=form.vars.cuil,apellido=form.vars.apellido,nombre=form.vars.nombre,\n\t\t\t\tdomicilio=form.vars.domicilio,f_nacimiento=form.vars.f_nacimiento,g_sanguineo=form.vars.g_sanguineo,curso=form.vars.curso,\n\t\t\t\tf_ingreso=form.vars.f_ingreso,celu=form.vars.celu,fijo=form.vars.fijo,tutor=form.vars.tutor,tel_tutor=form.vars.tel_tutor,\n\t\t\t\tformacion=form.vars.formacion)\t\n\n\n    \t\tresponse.flash = \'formulario aceptado\'\n    \t\tredirect(URL(c=\'nuevo\',f=\'cargado\'))\n    \telif form.errors:\n        \tresponse.flash = \'el formulario tiene errores\'\n    \telse:\n        \tresponse.flash = \'por favor complete el formulario\'  \n\treturn dict(form=form)\ndef cargado():\n\treturn dict()\ndef pregunta():\n\treturn dict()\n\n\n\n            \n        \n\t\n\nresponse._vars=response._caller(comprobacion)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/nuevo.py", line 94, in <module>\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/nuevo.py", line 18, in comprobacion\n    set_cad=db(db.legajo.dni==dni).select()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1435, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'legajo.foto.8cab8309bcb0b6ca.6361646574652e6a7067.jpg\'\n'
p11
s.