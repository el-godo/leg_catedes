(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Spanish.json'"
p3
sS'layer'
p4
S'D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/Sanciones.py'
p5
sS'code'
p6
S'from gluon.serializers import json\ndef listado():\n\tset_todo=db(db.legajo).select()\n\tmf = json(set_todo)\n\treturn dict(set_todo=set_todo,mf=mf)\n\n\treturn dict()\ndef sanciones():\n\tdni=request.args[0]\n\n\tset_todo=db(db.sanciones.dni==dni).select()\n\tmf = json(set_todo)\n\treturn dict(set_todo=set_todo,mf=mf)\n\n\t\n\n\n\ndef sancionar():\n\tdni=request.args[0]\n\tset_name=db(db.legajo.dni==dni).select().first()\n\tnombre=set_name.nombre\n\tapellido=set_name.apellido\n\t\n\tform=SQLFORM.factory(\n\tField(\'dni\',\'integer\',default=dni),\n    Field(\'apellido\',requires=IS_UPPER(),default=apellido),\n    Field(\'nombre\',requires=IS_UPPER(),default=nombre),\n    Field(\'dni\',\'integer\'),\n    Field(\'memorandum\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()]),\n    Field(\'fecha\',\'datetime\',label="Fecha ",requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000\'), IS_DATE(format=\'%d/%m/%Y\'),]),\n    Field(\'dias\',\'integer\'),\n    Field(\'articulo\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()]),\n    Field(\'encuadramiento\',\'text\',requires=IS_UPPER()),    \n    Field(\'descripcion\',\'text\',requires=IS_UPPER()),\n    Field(\'sancionador\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()]),\n    Field(\'fecha_cumpli\',\'datetime\',label="Fecha de cumplimiento "\n    \t,requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000 \'), IS_DATE(format=\'%d/%m/%Y\'),]),\n    Field(\'visacion\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio  \'),IS_UPPER()]),\n\n    )\n    \tif form.accepts(request,session):\n    \t\tdb.sanciones.insert(dni=dni,nombre=nombre,apellido=apellido,memorandum=form.vars.memorandum,fecha=form.vars.fecha,dias=form.vars.dias,\n    \t\t\tencuadramiento=form.vars.encuadramiento,articulo=form.vars.articulo,descripcion=form.vars.descripcion,sancionador=form.vars.sancionador,\n    \t\t\tfecha_cumpli=form.vars.fecha_cumpli,visacion=form.vars.visacion\n    \t\t\t)\n    \t\tredirect(URL(c=\'sanciones\',f=\'mensaje\',args=[dni]))\n    \telif form.errors:\n        \tresponse.flash = \'el formulario tiene errores\'\n    \telse:\n        \tresponse.flash = \'por favor complete el formulario\'\t\t\n\n\treturn dict(form=form,dni=dni,nombre=nombre,apellido=apellido)\n\ndef mensaje():\n\treturn dict()\ndef editar():\n\n\n\treturn dict()\nresponse._vars=response._caller(sanciones)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/Sanciones.py", line 61, in <module>\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\esc_legajos\\controllers/Sanciones.py", line 11, in sanciones\n    set_todo=db(db.sanciones.dni==dni).select()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1435, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'Spanish.json\'\n'
p11
s.