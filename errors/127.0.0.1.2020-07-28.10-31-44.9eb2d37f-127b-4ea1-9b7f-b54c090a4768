(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'js'"
p3
sS'layer'
p4
S'D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/sanciones.py'
p5
sS'code'
p6
S'from gluon.serializers import json\n@auth.requires(auth.has_membership(role = \'Super\')|auth.has_membership(role = \'Jefe de cuerpo\')|auth.has_membership(role = \'Oficiales\')|auth.has_membership(role = \'Director\')) \n\ndef listado():\n\tset_todo=db((db.legajo.estado!="INACTIVO")&(db.legajo.estado!="BAJA")&(db.legajo.estado!="BAJA_POR_SACIONES")&(db.legajo.estado!="BAJA VONLUNTARIA")&(db.legajo.estado!="RECIBIDO")).select()\n\tmf = json(set_todo)\n\treturn dict(set_todo=set_todo,mf=mf)\n\n\treturn dict()\ndef sanciones():\n\tdni=request.args[0]\n\tset_todo=db(db.sanciones.dni==dni).select()\n\tmf = json(set_todo)\n\treturn dict(set_todo=set_todo,mf=mf,dni=dni)\t\n\n\n@auth.requires(auth.has_membership(role = \'Super\')|auth.has_membership(role = \'Jefe de cuerpo\')|auth.has_membership(role = \'Oficiales\')) \ndef sancionar():\n\tdni=request.args[0]\n\tset_name=db(db.legajo.dni==dni).select().first()\n\tnombre=set_name.nombre\n\tapellido=set_name.apellido\t\n        quien=auth.user.id            #atrapo el usuario logueado\n        user=db(db.auth_user.id==quien).select().first()#pregunto quien esta logueado\n        user_nom=user.first_name\n        user_ape=user.last_name\n        quien=user_nom+user_ape\n\n\n\tform=SQLFORM.factory(\n\tField(\'dni\',\'integer\',default=dni),\n    Field(\'apellido\',requires=IS_UPPER(),default=apellido),\n    Field(\'nombre\',requires=IS_UPPER(),default=nombre),  \n    Field(\'memorandum\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()]),\n    Field(\'fecha\',\'datetime\',label="Fecha ",requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000\'), IS_DATE(format=\'%d/%m/%Y\'),]),\n    Field(\'dias\',\'integer\'),\n    Field(\'encuadramiento\',\'text\',requires=IS_UPPER()),    \n    Field(\'articulo\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()]),\n    \n    Field(\'descripcion\',\'text\',requires=IS_UPPER()),\n    Field(\'sancionador\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()],default=user_nom),\n    Field(\'fecha_cumpli\',\'datetime\',label="Fecha de cumplimiento "\n    \t,requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000 \'), IS_DATE(format=\'%d/%m/%Y\'),]),\n    Field(\'estado\',requires=IS_IN_SET(["No Visado","Visado","Cancelado"])),\n    Field(\'Visado_por\'),)        \n    \n    \n    \tif form.accepts(request,session):\n    \t   db.sanciones.insert(dni=dni,nombre=nombre,apellido=apellido,memorandum=form.vars.memorandum,fecha=form.vars.fecha,dias=form.vars.dias,\n    \t \t\tencuadramiento=form.vars.encuadramiento,articulo=form.vars.articulo,descripcion=form.vars.descripcion,sancionador=form.vars.sancionador,\n    \t \t\tfecha_cumpli=form.vars.fecha_cumpli,visacion="No Visado"\n    \t\t\t)\n\n\n    \t   redirect(URL(c=\'sanciones\',f=\'mensaje\',args=[dni]))\n    \telif form.errors:\n        \tresponse.flash = \'el formulario tiene errores\'\n    \telse:\n        \tresponse.flash = \'por favor complete el formulario\'\t\t\n\n\treturn dict(form=form,dni=dni,nombre=nombre,apellido=apellido,user_ape=user_ape,user_nom=user_nom,quien=quien)\n\ndef mensaje():\n    dni=request.args[0]\n\n    return dict(dni=dni)\n@auth.requires(auth.has_membership(role = \'Super\')|auth.has_membership(role = \'Jefe de cuerpo\')|auth.has_membership(role = \'Oficiales\')) \ndef editar():\n\tide=request.args[0]\n\tset_sancion=db(db.sanciones.id==ide).select().first()\n        dni=set_sancion.dni\n        nombre=set_sancion.nombre\n        apellido=set_sancion.apellido\n        memorandum=set_sancion.memorandum\n        fecha=set_sancion.fecha\n        dias=set_sancion.dias\n        articulo=set_sancion.articulo\n        encuadramiento=set_sancion.encuadramiento\n        descripcion=set_sancion.descripcion\n        sancionador=set_sancion.sancionador\n        fecha_cumpli=set_sancion.fecha_cumpli\n        visacion=set_sancion.visacion\n        form=SQLFORM.factory(\n        Field(\'dni\',\'integer\',default=dni),\n        Field(\'apellido\',requires=IS_UPPER(),default=apellido),\n        Field(\'nombre\',requires=IS_UPPER(),default=nombre),        \n        Field(\'memorandum\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()],default=memorandum),\n        Field(\'fecha\',\'datetime\',label="Fecha ",requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000\'), IS_DATE(format=\'%d/%m/%Y\'),],default=fecha),\n        Field(\'dias\',\'integer\',default=dias),\n        Field(\'articulo\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()],default=articulo),\n        Field(\'encuadramiento\',\'text\',requires=IS_UPPER(),default=encuadramiento),    \n        Field(\'descripcion\',\'text\',requires=IS_UPPER(),default=descripcion),\n        Field(\'sancionador\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio \'),IS_UPPER()],default=descripcion),\n        Field(\'fecha_cumpli\',\'datetime\',label="Fecha de cumplimiento "\n            ,requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio, ej: 20/02/2000 \'), IS_DATE(format=\'%d/%m/%Y\'),],default=fecha_cumpli),\n        Field(\'visacion\',requires=[IS_NOT_EMPTY(error_message=\'El campo no puede estar vacio  \'),IS_UPPER()],default=visacion),\n\n        )\n        if form.accepts(request,session):\n            set_sancion.update_record(dni=dni,nombre=nombre,apellido=apellido,memorandum=form.vars.memorandum,fecha=form.vars.fecha,dias=form.vars.dias,\n                encuadramiento=form.vars.encuadramiento,articulo=form.vars.articulo,descripcion=form.vars.descripcion,sancionador=form.vars.sancionador,\n                fecha_cumpli=form.vars.fecha_cumpli,visacion=form.vars.visacion\n                )\n            redirect(URL(c=\'sanciones\',f=\'mensaje\',args=[dni]))\n\n        elif form.errors:\n            response.flash = \'el formulario tiene errores\'\n        else:\n            response.flash = \'por favor complete el formulario\'     \n\n\treturn dict(form=form,dni=dni,set_sancion=set_sancion,nombre=nombre,apellido=apellido,memorandum=memorandum,fecha=fecha,\n        dias=dias,articulo=articulo,encuadramiento=encuadramiento,descripcion=descripcion,sancionador=sancionador,\n        fecha_cumpli=fecha_cumpli,visacion=visacion)\n\n\ndef lista_baja():\n   \n    set_todo=db((db.legajo.estado!="RECIBIDO")).select()\n    mf = json(set_todo)\n    return dict(set_todo=set_todo,mf=mf)\n\n  \n\ndef baja():\n\n    return dict()    \n\ndef sin_autorizacion():\n    return dict()\n\nresponse._vars=response._caller(sancionar)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/sanciones.py", line 131, in <module>\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\tools.py", line 4241, in f\n    return action(*a, **b)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/sanciones.py", line 20, in sancionar\n    set_name=db(db.legajo.dni==dni).select().first()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1435, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'js\'\n'
p11
s.