(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'js'"
p3
sS'layer'
p4
S'D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/estadisticas.py'
p5
sS'code'
p6
S'@auth.requires(auth.has_membership(role = \'Super\')|auth.has_membership(role = \'Jefe de cuerpo\')|auth.has_membership(role = \'Director\')) \n\ndef menu():\n\n\treturn dict()\ndef totales():\n\tfrom datetime import datetime, date, time, timedelta\n\timport calendar\n\tfecha=datetime.now()\n\thoy_anio=fecha.year\n\thoy_mes=fecha.month\n\tset_leg=db(db.legajo.estado).select()\n\tctp=0   #contador total de escuela de cadetes-->\n\tp1=0\t#contador de total de cadetes de policia de 1 a\xc3\xb1o\n\tp2=0 \t#contador de total de cadetes de policia de 2 a\xc3\xb1o\n\tp3=0 \t#contador de total de cadetes de policia de 3 a\xc3\xb1o\n\tp1b=0\t#contador de total de cadetes de policia de 1 a\xc3\xb1o de baja\n\tp2b=0\t#contador de total de cadetes de policia de 2 a\xc3\xb1o de baja\n\tp3b=0\t#contador de total de cadetes de policia de 3 a\xc3\xb1o de baja\n\tcts=0 \t#contador total de escuela sevicio penitenciario-->\n\ts1=0\t#contador de total de cadetes del servicio de 1 a\xc3\xb1o\n\ts2=0\t#contador de total de cadetes del servicio de 2 a\xc3\xb1o\n\ts3=0\t#contador de total de cadetes del servicio de 3 a\xc3\xb1o\n\ts1b=0\t#contador de total de cadetes del servicio de 1 a\xc3\xb1o de baja\n\ts2b=0\t#contador de total de cadetes del servicio de 2 a\xc3\xb1o de baja\n\ts3b=0\t#contador de total de cadetes del servicio de 3 a\xc3\xb1o de baja\n\tatie=0   # Acumulador total de inscriptos en el establecimiento\n\tta=0\t\n\n\n\treturn dict(set_leg=set_leg,ctp=ctp,p1=p1,p2=p2,p3=p3,p1b=p1b,p2b=p2b,p3b=p3b,s1b=s1b,s2b=s2b,s3b=s3b,\n\t\ts1=s1,s2=s2,s3=s3,atie=atie,ta=ta)\t\n\n\ndef sin_autorizacion():\n\treturn dict()\ndef cant_sanciones():\n\tfrom datetime import datetime, date, time, timedelta\n\timport calendar\n\tdni=request.args[0]\n\tset_sanciones=db(db.sanciones.dni==dni).select()\n\tfecha=datetime.now()\n\thoy_anio=fecha.year\n\thoy_mes=fecha.month\n\ta="si"\n\tcsa=0#contador sanciones anio\n\tcsm=0#contador sanciones mes\n\tsmgm=0#la sancion mas grande del mes\n\tsmga=0# La sancion mas grande del a\xc3\xb1o\n\tcpa=0#compara sanciones del a\xc3\xb1o\n\tcpm=0#compara sanciones del hoy_mes\n\tcsea=0 # compara sancion mas alta del a\xc3\xb1o\n\tcsem=0 # compara sancion mas alta del mes\n\tidma=0 # id de mayor dias de arresyto del a\xc3\xb1o\n\tidmm=0 # id de mayor dias de arresyto del mes\n\t\n\n\n\treturn dict(set_sanciones=set_sanciones,hoy_anio=hoy_anio,hoy_mes=hoy_mes,csa=csa,csm=csm,)\n\ndef cant_n_medicas():\n\tfrom datetime import datetime, date, time, timedelta\n\timport calendar\n\tdni=request.args[0]\n\tset_medicas=db(db.n_medicas.dni==dni).select()\n\tfecha=datetime.now()\n\thoy_anio=fecha.year\n\thoy_mes=fecha.month\n\ta="si"\n\tcna=0#acumulador de notas por anio\n\tanmm=0#acumulador de notas por mes\n\tanaa=0 #acumulador de notas medicas roposo absoluto del anio\n\tanra=0 #acumulador de notas medicas roposo relativo del anio\n\tnmgm=0#la nota mas grande del mes\n\tnmga=0# La nota mas grande del a\xc3\xb1o\n\tcpa=0#compara nota del a\xc3\xb1o\n\tcpm=0#compara nota del hoy_mes\n\tcnmaa=0 # compara nota mas alta del a\xc3\xb1o\n\tcnemam=0 # compara nota mas alta del mes\n\tidmna=0 # id de mayor dias de nota del a\xc3\xb1o\n\tidmnm=0 # id de mayor dias de nota del mes\n\tcomp_anio=0\n\tabs_a=0 #acumulador de notas reposo absoluto en el a\xc3\xb1o\n\tarl_a=0 #acumulador de notas medicas reposo relativo en el a\xc3\xb1o\n\tanra_m=0 #acumulador de notas medicas reposo absoluto en el mes\n\tanrr_m=0 #acumulador de notas medicas reposo absoluto en el mes\n\n\n\n\treturn dict(set_medicas=set_medicas,hoy_anio=hoy_anio,hoy_mes=hoy_mes,comp_anio=comp_anio,cna=cna,abs_a=abs_a,arl_a=arl_a,\n\t\tanmm=anmm,anra_m=anra_m,anrr_m=anrr_m,)\n\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\nresponse._vars=response._caller(cant_sanciones)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/estadisticas.py", line 108, in <module>\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\applications\\leg_catedes\\controllers/estadisticas.py", line 41, in cant_sanciones\n    set_sanciones=db(db.sanciones.dni==dni).select()\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1283, in select\n    sql = self._select(query, fields, attributes)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1170, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "D:\\BACKUP\\web2pyVersion2.14.6\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1435, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'js\'\n'
p11
s.